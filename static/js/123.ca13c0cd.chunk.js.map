{"version":3,"file":"static/js/123.ca13c0cd.chunk.js","mappings":"uNACaA,EAAYC,EAAAA,GAAAA,IAAH,qRAcTC,EAAYD,EAAAA,GAAAA,IAAH,mK,UCdTE,EAAcF,EAAAA,GAAAA,MAAH,mZ,SCCXG,EAAc,SAAC,GAAkB,IAAjBC,EAAgB,EAAhBA,WACzB,OAAO,iBAAMC,SAAUD,EAAhB,UACP,UAACF,EAAD,mBAEJ,kBACAI,KAAK,OACLC,KAAK,OACLC,QAAQ,2HACRC,MAAM,yIACNC,YAAY,OACZC,UAAQ,KAER,kBACAL,KAAK,MACLC,KAAK,SACLC,QAAQ,qGACRC,MAAM,+FACNC,YAAY,SACZC,UAAQ,KAER,mBAAQL,KAAK,SAAb,6BAGC,ECxBYM,EAAwBZ,EAAAA,GAAAA,GAAH,mXCCrBa,EAAc,SAAC,GAA6C,IAA5CC,EAA2C,EAA3CA,SAAUC,EAAiC,EAAjCA,OAAQC,EAAyB,EAAzBA,UAAWC,EAAc,EAAdA,SAChDC,EAAkBF,IACxB,OAAO,SAACJ,EAAD,UAEVE,EAASK,OAAS,EAAIJ,EAAOI,OAAS,EAAID,EAAgBE,KAAI,SAAAC,GACnD,OAAO,0BAAsBA,EAAQd,KAA9B,KAAsCc,EAAQC,QACrD,mBAAQhB,KAAK,SAASiB,GAAIF,EAAQE,GAAIC,QAASP,EAA/C,sBADgBI,EAAQE,GAG3B,IACET,EAASM,KAAI,SAAAC,GACZ,OAAO,0BAAsBA,EAAQd,KAA9B,KAAsCc,EAAQC,QACpD,mBAAQhB,KAAK,SAASiB,GAAIF,EAAQE,GAAIC,QAASP,EAA/C,sBADeI,EAAQE,GAG3B,KAAI,4DAEZ,EChBYE,EAAezB,EAAAA,GAAAA,IAAH,4JCCZ0B,EAAS,SAAC,GAAa,IAAZC,EAAW,EAAXA,MACpB,OAAO,UAACF,EAAD,YACP,kDACA,kBAAOlB,KAAK,OAAOqB,SAAUD,EAAOjB,YAAY,WAEnD,E,UCNYmB,EAAgB7B,EAAAA,GAAAA,IAAH,+PCCb8B,EAAW,SAAC,GAA2B,IAA1BC,EAAyB,EAAzBA,UAAWC,EAAc,EAAdA,SACjC,OAAO,UAACH,EAAD,YACT,uBAAIE,KACJ,mBAAQP,QAASQ,EAAjB,sBAED,E,wCCuCD,EAlCiB,SAAC,GAAqH,IAApHC,EAAmH,EAAnHA,gBAAgBC,EAAmG,EAAnGA,cAAcpB,EAAqF,EAArFA,SAASC,EAA4E,EAA5EA,OAAQoB,EAAoE,EAApEA,aAAcC,EAAsD,EAAtDA,gBAAiBL,EAAqC,EAArCA,UAAWC,EAA0B,EAA1BA,SAAUK,EAAgB,EAAhBA,WAC5GC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MASjB,OARAC,EAAAA,EAAAA,YAAU,WAEN,IAAKL,EACH,OAASC,EAAS,IAAK,CAAEK,SAAS,IAEhCH,GAASI,EAAAA,EAAAA,MAEhB,GAAE,CAACJ,EAAUH,EAAYC,KACnB,iCACP,SAAC,KAAD,WACE,SAAC,KAAD,WACE,0BACA,SAAC,KAAD,CAASO,GAAG,YAAZ,6BAIJ,8BACI,UAAC9C,EAAD,YACI,SAAC+B,EAAD,CAAUC,UAAWA,EAAWC,SAAUA,KAC1C,UAAC/B,EAAD,YACA,uCACA,SAACE,EAAD,CAAaC,WAAY6B,KACzB,sCACA,SAACP,EAAD,CAAQC,MAAOO,KACnB,SAACrB,EAAD,CAAaC,SAAUA,EAAUC,OAAQA,EAAQC,UAAWmB,EAAclB,SAAUmB,cAM3F,C,qIC5CYU,EAAkB9C,EAAAA,GAAAA,IAAH,kXAsBf+C,EAAe/C,EAAAA,GAAAA,OAAH,4GAMZD,EAAYC,EAAAA,GAAAA,IAAH,mT","sources":["components/Contacts/Contacts.styled.js","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.js","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.js","components/Filter/Filter.styled.js","components/Filter/Filter.js","components/UserMenu/UserMenu.styled.js","components/UserMenu/UserMenu.js","components/Contacts/Contacts.js","components/Navigation/Navigation.styled.js"],"sourcesContent":["import styled from \"styled-components\";\nexport const Container = styled.div`\ndisplay: flex;\n width: 100%;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 20px;\n  box-sizing: border-box;\n  background-color: #f8f8f8;\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\n  border-radius: 8px;\nflex-direction: column;\ngap: 25px;\n\n`\nexport const StyledDiv = styled.div`\npadding: 15px;\nwidth: 100%;\nbackground-color: lightgreen;\n\nborder-radius: 5px;\nborder: 2px solid darkgreen;\nbox-sizing: border-box;\n`","import { styled } from \"styled-components\";\nexport const StyledLabel = styled.label`\ndisplay: flex;\nflex-direction: column;\ngap: 15px;\nfont-weight: bold;\ninput {\n    border: 2px solid darkgreen;\nborder-radius: 25px;\nheight: 25px;\npadding: 5px;\n}\nbutton {\n    border: 2px solid darkgreen;\nborder-radius: 25px;\nheight: 50px;\nbackground-color: lightblue;\n}\nbutton:hover,\nbutton:focus {\nbackground-color: grey;\ncolor: white;\n}\n::placeholder {\n}\n`","import PropTypes from \"prop-types\";\nimport { StyledLabel } from \"./ContactForm.styled\"\nexport const ContactForm = ({formSubmit}) => {\n    return <form onSubmit={formSubmit}>\n    <StyledLabel>\n       Name\n<input\ntype=\"text\"\nname=\"name\"\npattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\ntitle=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\nplaceholder=\"Name\"\nrequired\n/>\n<input\ntype=\"tel\"\nname=\"number\"\npattern=\"\\+?\\d{1,4}?[ .\\-\\s]?\\(?\\d{1,3}?\\)?[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,9}\"\ntitle=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\nplaceholder=\"Number\"\nrequired\n/>\n<button type=\"submit\">Add contact</button>\n</StyledLabel>\n</form>\n}\nContactForm.propTypes = {\n    formSubmit: PropTypes.func\n}","import { styled } from \"styled-components\";\nexport const FilteringByNameStyled = styled.ul`\npadding: 0;\ndisplay: flex;\nflex-direction: column;\nlist-style: none;\ngap: 15px;\nbutton {\n    border: none;\n    background-color: red;\n    \n    color: white;\n    border-radius: 25px;\n    height: 25px;\n}\nli {\n    display: flex;\n    justify-content: space-between;\n}\nbutton:hover,\nbutton:focus {\n    background-color: darkred;\n}\n`","import PropTypes from \"prop-types\";\nimport { FilteringByNameStyled } from \"./ContactList.styled\"\nexport const ContactList = ({contacts, filter, filtering, deleting}) => {\n    const filteringByName = filtering()\n    return <FilteringByNameStyled>\n             \n{contacts.length > 0 ? filter.length > 0 ? filteringByName.map(contact => {\n            return <li key={contact.id}>{contact.name}: {contact.number}\n            <button type=\"button\" id={contact.id} onClick={deleting}>Delete</button>\n            </li>\n        })\n         : contacts.map(contact => {\n            return <li key={contact.id}>{contact.name}: {contact.number}\n             <button type=\"button\" id={contact.id} onClick={deleting}>Delete</button>\n            </li>\n        }) : <li>You dont have any contacts yet</li>}\n    </FilteringByNameStyled>\n}\nContactList.propTypes = {\n    contacts: PropTypes.array,\n    filter: PropTypes.string,\n    filtering: PropTypes.func,\n    deleting: PropTypes.func\n}","import { styled } from \"styled-components\";\nexport const FilterStyled = styled.div`\np {\n    font-weight: bold;\n}\ninput {\n    border: 2px solid darkgreen;\nborder-radius: 25px;\nheight: 25px;\npadding: 5px;\n\n}\n`","import PropTypes from \"prop-types\";\nimport { FilterStyled } from \"./Filter.styled\"\nexport const Filter = ({input}) => {\n    return <FilterStyled>\n    <p>Find contacts by name</p>\n    <input name=\"name\" onChange={input} placeholder=\"Name\"></input>\n    </FilterStyled>\n}\nFilter.propTypes = {\n    input: PropTypes.func\n}","import styled from \"styled-components\";\nexport const StyledUserDiv = styled.div`\nbutton {\n background-color: orange;\ncolor: white;\nborder: 2px solid darkorange;\nborder-radius: 25px;\nheight: 50px;\nwidth: 90px; \n}\nbutton:hover,\n:focus {\n background-color: gold;\n border: 2px solid orange;\n\n\n\n}\n\n\n`\n","import { StyledUserDiv } from \"./UserMenu.styled\"\n\nexport const UserMenu = ({userEmail, onLogout}) => {\n    return <StyledUserDiv>\n  <p>{userEmail}</p>\n  <button onClick={onLogout}>Logout</button>\n</StyledUserDiv>\n}","import { StyledDiv } from \"components/Contacts/Contacts.styled\"\nimport { fetchContacts } from \"api/api\"\nimport { ContactForm } from \"components/ContactForm/ContactForm\"\nimport { ContactList } from \"components/ContactList/ContactList\"\nimport { Filter } from \"components/Filter/Filter\"\nimport { ContainerHeader, HeaderStyled } from \"components/Navigation/Navigation.styled\"\nimport { UserMenu } from \"components/UserMenu/UserMenu\"\nimport { useEffect } from \"react\"\nimport { useDispatch } from \"react-redux\"\nimport { NavLink, useNavigate } from \"react-router-dom\"\nimport { Container } from \"./Contacts.styled\"\n\nconst Contacts = ({onSubmitContact,onChangeInput,contacts,filter, filterByName, deletingContact, userEmail, onLogout, isLoggedIn}) => {\n    const navigate = useNavigate()\n    const dispatch = useDispatch();\n    useEffect(() => {\n        \n        if (!isLoggedIn) {\n          return   navigate(\"/\", { replace: true })\n        } else {\n            dispatch(fetchContacts())\n        }\n    }, [dispatch, isLoggedIn, navigate])\n    return <>\n    <HeaderStyled>\n      <ContainerHeader>\n        <nav>\n        <NavLink to=\"/contacts\">Contacts</NavLink>\n       </nav> \n     </ContainerHeader> \n    </HeaderStyled> \n    <section>\n        <Container>\n            <UserMenu userEmail={userEmail} onLogout={onLogout}/>\n            <StyledDiv>\n            <h1>Phonebook</h1>\n            <ContactForm formSubmit={onSubmitContact}/>\n            <h2>Contacts</h2>\n            <Filter input={onChangeInput}/>\n        <ContactList contacts={contacts} filter={filter} filtering={filterByName} deleting={deletingContact}/>\n        </StyledDiv> \n        </Container>\n   </section> \n   </>\n    \n}\nexport default Contacts","import styled from \"styled-components\";\nexport const ContainerHeader = styled.div`\n width: 80%;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 20px;\n  text-align: right;\n  nav {\n    display: flex;\n    justify-content: flex-end;\n    gap: 25px;\n  }\n  nav a {\n    color: white;\n    text-decoration: none;\n    font-weight: bold;\n  }\n  nav a:hover, \n       :focus {\n        text-decoration: underline\n       }\n\n`\nexport const HeaderStyled = styled.header`\n background-color: orange;\n  color: #fff;\n  text-align: center;\n  padding: 5px;\n`\nexport const Container = styled.div`\ndisplay: flex;\n width: 100%;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 20px;\n  box-sizing: border-box;\n  background-color: #f8f8f8;\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\n  border-radius: 8px;\n  height: 500px;\n  justify-content: center;\n  align-items: center;\n`"],"names":["Container","styled","StyledDiv","StyledLabel","ContactForm","formSubmit","onSubmit","type","name","pattern","title","placeholder","required","FilteringByNameStyled","ContactList","contacts","filter","filtering","deleting","filteringByName","length","map","contact","number","id","onClick","FilterStyled","Filter","input","onChange","StyledUserDiv","UserMenu","userEmail","onLogout","onSubmitContact","onChangeInput","filterByName","deletingContact","isLoggedIn","navigate","useNavigate","dispatch","useDispatch","useEffect","replace","fetchContacts","to","ContainerHeader","HeaderStyled"],"sourceRoot":""}